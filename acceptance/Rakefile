# frozen_string_literal: true

require 'rototiller'

desc "Generate Beaker Host config"
rototiller_task :host_config do |task|
  task.add_env(name: 'BOLT_CONTROLLER', default: 'centos7-64bolt,ssh.')
  task.add_env(name: 'BOLT_NODES',
               default: 'ubuntu1604-64ssh.-osx1012-64ssh.-windows10ent-64winrm.')
  nodes = ENV['BOLT_CONTROLLER'] + '-' + ENV['BOLT_NODES']
  generate = "beaker-hostgenerator"
  generate += " #{nodes}"
  generate += " > hosts.yaml"
  sh generate
  sh "cat hosts.yaml"
end

beaker_options = [
  { name: '--log-level',
    add_argument: {
      name: 'debug',
      add_env: {
        name: 'BEAKER_LOG_LEVEL',
        message: 'Beaker log level'
      }
    } },
  { name: '--hosts',
    add_argument: {
      name: 'hosts.yaml',
      add_env: {
        name: 'BEAKER_HOSTS_FILE',
        message: 'Beaker hosts file'
      }
    } },
  { name: '--tests',
    add_argument: {
      name: 'tests',
      add_env: {
        name: 'BEAKER_TESTS',
        message: 'Beaker test path(s)'
      }
    } },
  { name: '--preserve-hosts',
    add_argument: {
      name: 'never',
      add_env: {
        name: 'BEAKER_PRESERVE_HOSTS',
        message: 'When should beaker keep hosts alive'
      }
    } },
  { name: '--keyfile',
    add_argument: {
      add_env: {
        name: 'BEAKER_KEYFILE',
        default: '~/.ssh/id_rsa-acceptance',
        message: 'The private SSH key beaker will use to connect to SUTs'
      }
    } }
]
namespace :test do
  desc "Run bolt acceptance tests against a published gem"
  task gem: :host_config
  rototiller_task :gem do |task|
    beaker_options << {
      name: '--options',
      add_argument: { name: 'config/gem/options.rb' }
    }
    task.add_env(name: 'GEM_VERSION', default: '> 0.1.0')
    task.add_env(name: 'GEM_SOURCE',  default: 'https://rubygems.org')
    task.add_env(name: 'SSH_USER',    default: 'root')
    task.add_env(name: 'SSH_PASSWORD')
    task.add_env(name: 'WINRM_USER', default: 'Administrator')
    task.add_env(name: 'WINRM_PASSWORD')
    task.add_command do |cmd|
      cmd.name = 'beaker'
      cmd.add_option(*beaker_options)
    end
  end

  desc "Run bolt acceptance tests against a git repo"
  task git: :host_config
  rototiller_task :git do |task|
    beaker_options << {
      name: '--options',
      add_argument: { name: 'config/git/options.rb' }
    }
    task.add_env(name: 'GIT_SERVER', default: 'https://github.com')
    task.add_env(name: 'GIT_FORK',   default: 'puppetlabs/bolt.git')
    task.add_env(name: 'GIT_BRANCH', default: 'master')
    task.add_env(name: 'GIT_SHA',    default: '')
    task.add_env(name: 'SSH_USER',   default: 'root')
    task.add_env(name: 'SSH_PASSWORD')
    task.add_env(name: 'WINRM_USER', default: 'Administrator')
    task.add_env(name: 'WINRM_PASSWORD')
    task.add_command do |cmd|
      cmd.name = 'beaker'
      cmd.add_option(*beaker_options)
    end
  end

  desc "Run bolt acceptance tests against a package"
  task package: :host_config
  rototiller_task :package do |task|
    beaker_options << {
      name: '--options',
      add_argument: { name: 'config/package/options.rb' }
    }
    task.add_env(name: 'SSH_USER', default: 'root')
    task.add_env(name: 'SSH_PASSWORD')
    task.add_env(name: 'WINRM_USER', default: 'Administrator')
    task.add_env(name: 'WINRM_PASSWORD')
    task.add_env(name: 'SHA')
    task.add_command do |cmd|
      cmd.name = 'beaker'
      cmd.add_option(*beaker_options)
    end
  end
end
