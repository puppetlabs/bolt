# frozen_string_literal: true

require 'rototiller'
require_relative 'lib/acceptance/bolt_setup_helper'

# rubocop:disable Style/MixinUsage
extend Acceptance::BoltSetupHelper
# rubocop:enable Style/MixinUsage

desc "Generate Beaker Host config"
rototiller_task :host_config do |task|
  unless ENV['BEAKER_HOSTS']
    task.add_env(name: 'BOLT_CONTROLLER', default: 'debian10-64')
    task.add_env(name: 'BOLT_NODES',
                 default: 'centos7-64,osx1012-64,windows10ent-64')
    ns = [ENV['BOLT_CONTROLLER'], ENV['BOLT_NODES']].join(',')
    n  = ns.split(',')
    n_new = []
    n.each_with_index do |node, i|
      roles = []
      roles << 'bolt' if i.zero?
      roles << if /win/ =~ node
                 'winrm'
               else
                 'ssh'
               end
      node = node + roles.join(',') + '.{type=aio}'
      n_new << node
    end
    nodes_final = n_new.join('-')
    generate = "bundle exec beaker-hostgenerator"
    generate += " #{nodes_final}"
    generate += " > hosts.yaml"
    sh generate
    sh "cat hosts.yaml"
  end
end

beaker_options = [
  { name: '--log-level',
    add_argument: {
      name: 'debug',
      add_env: {
        name: 'BEAKER_LOG_LEVEL',
        message: 'Beaker log level'
      }
    } },
  { name: '--hosts',
    add_argument: {
      name: 'hosts.yaml',
      add_env: {
        name: 'BEAKER_HOSTS',
        message: 'Beaker hosts file'
      }
    } },
  { name: '--tests',
    add_argument: {
      name: 'tests',
      add_env: {
        name: 'BEAKER_TESTS',
        message: 'Beaker test path(s)'
      }
    } },
  { name: '--preserve-hosts',
    add_argument: {
      name: 'never',
      add_env: {
        name: 'BEAKER_PRESERVE_HOSTS',
        message: 'When should beaker keep hosts alive'
      }
    } },
  { name: '--keyfile',
    add_argument: {
      name: '~/.ssh/id_rsa-acceptance',
      add_env: {
        name: 'BEAKER_KEYFILE',
        message: 'The private SSH key beaker will use to connect to SUTs'
      }
    } }
]
beaker_env = [
  { name: 'SSH_USER',       default: ssh_user },
  { name: 'SSH_PASSWORD',   default: ssh_password },
  { name: 'WINRM_USER',     default: winrm_user },
  { name: 'WINRM_PASSWORD', default: winrm_password }
]
namespace :test do
  desc "Run bolt acceptance tests against a published gem"
  task gem: :host_config
  rototiller_task :gem do |task|
    beaker_options << {
      name: '--options',
      add_argument: { name: 'config/gem/options.rb' }
    }
    beaker_env.each { |env| task.add_env(env) }
    task.add_env(name: 'GEM_VERSION', default: gem_version)
    task.add_env(name: 'GEM_SOURCE',  default: gem_source)
    task.add_command do |cmd|
      # without 'bundle exec' testing in jenkins fails
      # with 'beaker not found'. We do not know why so
      # for now use bundle exec to keep things working
      #             - Sean P. McDonald 4/24/18
      cmd.name = 'bundle exec beaker'
      cmd.add_option(*beaker_options)
    end
  end

  desc "Run bolt acceptance tests against a git repo"
  task git: :host_config
  rototiller_task :git do |task|
    beaker_options << {
      name: '--options',
      add_argument: { name: 'config/git/options.rb' }
    }
    beaker_env.each { |env| task.add_env(env) }
    task.add_env(name: 'GIT_SERVER', default: git_server)
    task.add_env(name: 'GIT_FORK',   default: git_fork)
    task.add_env(name: 'GIT_BRANCH', default: git_branch)
    task.add_env(name: 'GIT_SHA',    default: git_sha)
    task.add_command do |cmd|
      # without 'bundle exec' testing in jenkins fails
      # with 'beaker not found'. We do not know why so
      # for now use bundle exec to keep things working
      #             - Sean P. McDonald 4/24/18
      cmd.name = 'bundle exec beaker'
      cmd.add_option(*beaker_options)
    end
  end

  desc "Run bolt acceptance tests against a package"
  task package: :host_config
  rototiller_task :package do |task|
    beaker_options << {
      name: '--options',
      add_argument: { name: 'config/package/options.rb' }
    }
    beaker_env.each { |env| task.add_env(env) }
    task.add_env(name: 'SHA')
    task.add_command do |cmd|
      # without 'bundle exec' testing in jenkins fails
      # with 'beaker not found'. We do not know why so
      # for now use bundle exec to keep things working
      #             - Sean P. McDonald 4/24/18
      cmd.name = 'bundle exec beaker'
      cmd.add_option(*beaker_options)
    end
  end
end
