{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Bolt Defaults",
  "description": "Bolt Defaults bolt-defaults.yaml Schema",
  "type": "object",
  "properties": {
    "analytics": {
      "$ref": "#/definitions/analytics"
    },
    "color": {
      "$ref": "#/definitions/color"
    },
    "compile-concurrency": {
      "$ref": "#/definitions/compile-concurrency"
    },
    "concurrency": {
      "$ref": "#/definitions/concurrency"
    },
    "disable-warnings": {
      "$ref": "#/definitions/disable-warnings"
    },
    "format": {
      "$ref": "#/definitions/format"
    },
    "inventory-config": {
      "$ref": "#/definitions/inventory-config"
    },
    "log": {
      "$ref": "#/definitions/log"
    },
    "module-install": {
      "$ref": "#/definitions/module-install"
    },
    "plugin-cache": {
      "$ref": "#/definitions/plugin-cache"
    },
    "plugin-hooks": {
      "$ref": "#/definitions/plugin-hooks"
    },
    "plugins": {
      "$ref": "#/definitions/plugins"
    },
    "puppetdb": {
      "$ref": "#/definitions/puppetdb"
    },
    "save-rerun": {
      "$ref": "#/definitions/save-rerun"
    },
    "spinner": {
      "$ref": "#/definitions/spinner"
    },
    "stream": {
      "$ref": "#/definitions/stream"
    }
  },
  "definitions": {
    "analytics": {
      "description": "Whether to disable analytics. Setting this option to 'false' in the system-wide or user-level configuration will disable analytics for all projects, even if this option is set to 'true' at the project level.",
      "type": "boolean"
    },
    "color": {
      "description": "Whether to use colored output when printing messages to the console.",
      "type": "boolean"
    },
    "compile-concurrency": {
      "description": "The maximum number of simultaneous manifest block compiles.",
      "type": "integer",
      "minimum": 1
    },
    "concurrency": {
      "description": "The number of threads to use when executing on remote targets.",
      "type": "integer",
      "minimum": 1
    },
    "disable-warnings": {
      "description": "An array of IDs of warnings to suppress. Warnings with a matching ID will not be logged by Bolt. If you are upgrading Bolt to a new major version, you should re-enable all warnings until you have finished upgrading.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "format": {
      "description": "The format to use when printing results.",
      "type": "string",
      "enum": [
        "human",
        "json",
        "rainbow"
      ]
    },
    "inventory-config": {
      "description": "A map of default configuration options for the inventory. This includes options for setting the default transport to use when connecting to targets, as well as options for configuring the default behavior of each transport.",
      "type": "object",
      "properties": {
        "transport": {
          "$ref": "#/definitions/transport"
        },
        "docker": {
          "$ref": "#/definitions/docker"
        },
        "local": {
          "$ref": "#/definitions/local"
        },
        "lxd": {
          "$ref": "#/definitions/lxd"
        },
        "pcp": {
          "$ref": "#/definitions/pcp"
        },
        "podman": {
          "$ref": "#/definitions/podman"
        },
        "remote": {
          "$ref": "#/definitions/remote"
        },
        "ssh": {
          "$ref": "#/definitions/ssh"
        },
        "winrm": {
          "$ref": "#/definitions/winrm"
        }
      }
    },
    "log": {
      "description": "A map of configuration for the logfile output. Under `log`, you can configure log options for `console` and add configuration for individual log files, such as `~/.puppetlabs/bolt/debug.log`. Individual log files must be valid filepaths. If the log file does not exist, then Bolt will create it before logging information. Set the value to `disable` to remove a log file defined at an earlier level of the config hierarchy. By default, Bolt logs to a bolt-debug.log file in the Bolt project directory.",
      "type": "object",
      "properties": {
        "console": {
          "description": "Configuration for logs output to the console.",
          "type": [
            "string",
            "object"
          ],
          "enum": [
            "disable"
          ],
          "properties": {
            "level": {
              "description": "The type of information to log.",
              "type": "string",
              "enum": [
                "trace",
                "debug",
                "error",
                "info",
                "warn",
                "fatal"
              ]
            }
          }
        }
      },
      "additionalProperties": {
        "description": "Configuration for the logfile output.",
        "type": [
          "string",
          "object"
        ],
        "enum": [
          "disable"
        ],
        "properties": {
          "append": {
            "description": "Whether to append output to an existing log file.",
            "type": "boolean"
          },
          "level": {
            "description": "The type of information to log.",
            "type": "string",
            "enum": [
              "trace",
              "debug",
              "error",
              "info",
              "warn",
              "fatal"
            ]
          }
        }
      }
    },
    "module-install": {
      "description": "Options that configure where Bolt downloads modules from. This option is only used when installing modules using the `bolt module add|install` commands and `Add|Install-BoltModule` cmdlets.",
      "type": "object",
      "properties": {
        "forge": {
          "description": "A subsection for configuring connections to a Forge host.",
          "type": "object",
          "properties": {
            "authorization_token": {
              "description": "The token used to authorize requests to the Forge host. Must also specify `baseurl` when using this option.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "baseurl": {
              "description": "The URL to the Forge host.",
              "type": "string",
              "format": "uri"
            },
            "proxy": {
              "description": "The HTTP proxy to use for Forge operations.",
              "type": "string",
              "format": "uri"
            }
          }
        },
        "proxy": {
          "description": "The HTTP proxy to use for Git and Forge operations.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "plugin-cache": {
      "description": "This feature is experimental. Enable plugin caching and set the time-to-live.",
      "type": "object",
      "required": [
        "ttl"
      ],
      "properties": {
        "ttl": {
          "description": "Time in seconds to keep the plugin cache.",
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "plugin-hooks": {
      "description": "A map of [plugin hooks](writing_plugins.md#hooks) and which plugins a hook should use. The only configurable plugin hook is `puppet_library`, which can use two possible plugins: [`puppet_agent`](https://github.com/puppetlabs/puppetlabs-puppet_agent#puppet_agentinstall) and [`task`](using_plugins.md#task).",
      "oneOf": [
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "plugins": {
      "description": "A map of plugins and their configuration data, where each key is the name of a plugin and its value is a map of configuration data. Configurable options are specified by the plugin. Read more about configuring plugins in [Using plugins](using_plugins.md#configuring-plugins).",
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "type": "object"
          },
          {
            "$ref": "#/definitions/_plugin"
          }
        ]
      }
    },
    "puppetdb": {
      "description": "A map containing options for [configuring the Bolt PuppetDB client](bolt_connect_puppetdb.md).",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "cacert": {
              "description": "The path to the ca certificate for PuppetDB.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "cert": {
              "description": "The path to the client certificate file to use for authentication.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "connect_timeout": {
              "description": "How long to wait in seconds when establishing connections with PuppetDB.",
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "key": {
              "description": "The private key for the certificate.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "read_timeout": {
              "description": "How long to wait in seconds for a response from PuppetDB.",
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "server_urls": {
              "description": "An array containing the PuppetDB host to connect to. Include the protocol `https` and the port, which is usually `8081`. For example, `https://my-puppetdb-server.com:8081`.",
              "oneOf": [
                {
                  "type": "array"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "token": {
              "description": "The path to the PE RBAC Token.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "save-rerun": {
      "description": "Whether to update `.rerun.json` in the Bolt project directory. If your target names include passwords, set this value to `false` to avoid writing passwords to disk.",
      "type": "boolean"
    },
    "spinner": {
      "description": "Whether to print a spinner to the console for long-running Bolt operations.",
      "type": "boolean"
    },
    "stream": {
      "description": "Whether to stream output from scripts and commands to the console. **This option is experimental**.",
      "type": "boolean"
    },
    "transport": {
      "description": "The default transport to use when the transport for a target is not specified in the URI.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "docker",
            "local",
            "lxd",
            "pcp",
            "podman",
            "remote",
            "ssh",
            "winrm"
          ]
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "docker": {
      "description": "A map of configuration options for the docker transport.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "cleanup": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cleanup"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "interpreters": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/interpreters"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "service-url": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/service-url"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "shell-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/shell-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-executable": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-executable"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tmpdir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tmpdir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tty": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tty"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "local": {
      "description": "A map of configuration options for the local transport. The set of available options is platform dependent.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "bundled-ruby": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/bundled-ruby"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "cleanup": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cleanup"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "interpreters": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/interpreters"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-executable": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-executable"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tmpdir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tmpdir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "lxd": {
      "description": "A map of configuration options for the LXD transport. The LXD transport is experimental and might include breaking changes between minor versions.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "cleanup": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cleanup"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "remote": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/remote"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-executable": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-executable"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tmpdir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tmpdir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "pcp": {
      "description": "A map of configuration options for the pcp transport.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "cacert": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cacert"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "job-poll-interval": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/job-poll-interval"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "job-poll-timeout": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/job-poll-timeout"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "read-timeout": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/read-timeout"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "service-url": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/service-url"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "task-environment": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/task-environment"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "token-file": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/token-file"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "podman": {
      "description": "A map of configuration options for the podman transport.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "cleanup": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cleanup"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "interpreters": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/interpreters"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "shell-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/shell-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-executable": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-executable"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tmpdir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tmpdir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tty": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tty"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "remote": {
      "description": "A map of configuration options for the remote transport.",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "run-on": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-on"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "ssh": {
      "description": "A map of configuration options for the ssh transport.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "ssh-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/ssh-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "native-ssh": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/native-ssh"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "cleanup": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cleanup"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "connect-timeout": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/connect-timeout"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "disconnect-timeout": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/disconnect-timeout"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "encryption-algorithms": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/encryption-algorithms"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "extensions": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/extensions"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host-key-algorithms": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host-key-algorithms"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host-key-check": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host-key-check"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "interpreters": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/interpreters"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "kex-algorithms": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/kex-algorithms"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "load-config": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/load-config"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "login-shell": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/login-shell"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "mac-algorithms": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/mac-algorithms"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "port": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/port"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "private-key": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/private-key"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "proxyjump": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/proxyjump"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "run-as-command": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/run-as-command"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "script-dir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/script-dir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-executable": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-executable"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "sudo-password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/sudo-password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tmpdir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tmpdir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tty": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tty"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "user": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/user"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "winrm": {
      "description": "A map of configuration options for the winrm transport.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "basic-auth-only": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/basic-auth-only"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "cacert": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cacert"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "cleanup": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/cleanup"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "connect-timeout": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/connect-timeout"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "extensions": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/extensions"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "file-protocol": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/file-protocol"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "host": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/host"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "interpreters": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/interpreters"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "password": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/password"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "port": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/port"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "realm": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/realm"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "smb-port": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/smb-port"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "ssl": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/ssl"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "ssl-verify": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/ssl-verify"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "tmpdir": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/tmpdir"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            },
            "user": {
              "oneOf": [
                {
                  "$ref": "#/transport_definitions/user"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "_plugin": {
      "description": "A plugin reference.",
      "type": "object",
      "required": [
        "_plugin"
      ],
      "properties": {
        "_plugin": {
          "description": "The name of the plugin.",
          "type": "string"
        },
        "_cache": {
          "description": "This feature is experimental. Enable plugin caching and set a time-to-live.",
          "type": "object",
          "required": [
            "ttl"
          ],
          "properties": {
            "ttl": {
              "description": "Time in seconds to keep the plugin cache.",
              "type": "integer",
              "minimum": 0
            }
          }
        }
      }
    }
  },
  "transport_definitions": {
    "basic-auth-only": {
      "description": "Whether to force basic authentication. This option is only available when using SSL.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "batch-mode": {
      "description": "Whether to disable password querying. When set to `false`, SSH will fall back to prompting for a password if key authentication fails. This might cause Bolt to hang. To prevent Bolt from hanging, you can configure `ssh-command` to use an SSH utility such as sshpass that supports providing a password non-interactively. For more information, see [Providing a password non-interactively using `native-ssh`](troubleshooting.md#providing-a-password-non-interactively-using-native-ssh).",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "bundled-ruby": {
      "description": "Whether to use the Ruby bundled with Bolt packages for local targets.",
      "type": "boolean"
    },
    "cacert": {
      "description": "The path to the CA certificate.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "cleanup": {
      "description": "Whether to clean up temporary files created on targets. When running commands on a target, Bolt might create temporary files. After completing the command, these files are automatically deleted. This value can be set to 'false' if you wish to leave these temporary files on the target.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "connect-timeout": {
      "description": "How long to wait in seconds when establishing connections. Set this value higher if you frequently encounter connection timeout errors when running Bolt.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 1
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "copy-command": {
      "description": "The command to use when copying files using native SSH. Bolt runs `<copy-command> <src> <dest>`. This option is used when you need support for features or algorithms that are not supported by the net-ssh Ruby library. **This option is experimental.** You can read more about this option in [Native SSH transport](experimental_features.md#native-ssh-transport).",
      "oneOf": [
        {
          "type": [
            "array",
            "string"
          ],
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "disconnect-timeout": {
      "description": "How long to wait in seconds before force-closing a connection.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 1
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "encryption-algorithms": {
      "description": "A list of encryption algorithms to use when establishing a connection to a target. Supported algorithms are defined by the Ruby net-ssh library and can be viewed [here](https://github.com/net-ssh/net-ssh#supported-algorithms). All supported, non-deprecated algorithms are available by default when this option is not used. To reference all default algorithms using this option, add 'defaults' to the list of supported algorithms.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "extensions": {
      "description": "A list of file extensions that are accepted for scripts or tasks on Windows. Scripts with these file extensions rely on the target's file type association to run. For example, if Python is installed on the system, a `.py` script runs with `python.exe`. The extensions `.ps1`, `.rb`, and `.pp` are always allowed and run via hard-coded executables.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "file-protocol": {
      "description": "Which file transfer protocol to use. Either `winrm` or `smb`. Using `smb` is recommended for large file transfers.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "smb",
            "winrm"
          ]
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "host": {
      "description": "The target's hostname.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "host-key-algorithms": {
      "description": "A list of host key algorithms to use when establishing a connection to a target. Supported algorithms are defined by the Ruby net-ssh library and can be viewed [here](https://github.com/net-ssh/net-ssh#supported-algorithms). All supported, non-deprecated algorithms are available by default when this option is not used. To reference all default algorithms using this option, add 'defaults' to the list of supported algorithms.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "host-key-check": {
      "description": "Whether to perform host key validation when connecting.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "interpreters": {
      "description": "A map of an extension name to the absolute path of an executable,  enabling you to override the shebang defined in a task executable. The extension can optionally be specified with the `.` character (`.py` and `py` both map to a task executable `task.py`) and the extension is case sensitive. When a target's name is `localhost`, Ruby tasks run with the Bolt Ruby interpreter by default.",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "array"
            ]
          },
          "propertyNames": {
            "pattern": "^.?[a-zA-Z0-9]+$"
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "job-poll-interval": {
      "description": "The interval, in seconds, to poll orchestrator for job status.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 1
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "job-poll-timeout": {
      "description": "The time, in seconds, to wait for orchestrator job status.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 1
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "kex-algorithms": {
      "description": "A list of key exchange algorithms to use when establishing a connection to a target. Supported algorithms are defined by the Ruby net-ssh library and can be viewed [here](https://github.com/net-ssh/net-ssh#supported-algorithms). All supported, non-deprecated algorithms are available by default when this option is not used. To reference all default algorithms using this option, add 'defaults' to the list of supported algorithms.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "load-config": {
      "description": "Whether to load system SSH configuration from '~/.ssh/config' and '/etc/ssh_config'.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "login-shell": {
      "description": "Which login shell Bolt should expect on the target. Supported shells are sh, bash, zsh, dash, ksh, powershell. **This option is experimental.**",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "sh",
            "bash",
            "zsh",
            "dash",
            "ksh",
            "powershell"
          ]
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "mac-algorithms": {
      "description": "List of message authentication code algorithms to use when establishing a connection to a target. Supported algorithms are defined by the Ruby net-ssh library and can be viewed [here](https://github.com/net-ssh/net-ssh#supported-algorithms). All supported, non-deprecated algorithms are available by default when this option is not used. To reference all default algorithms using this option, add 'defaults' to the list of supported algorithms.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "native-ssh": {
      "type": "boolean",
      "description": "This enables the native SSH transport, which shells out to SSH instead of using the net-ssh Ruby library"
    },
    "password": {
      "description": "The password to use to login.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "port": {
      "description": "The port to use when connecting to the target.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "private-key": {
      "description": "Either the path to the private key file to use for authentication, or a hash with the key `key-data` and the contents of the private key. Note that the key cannot be encrypted if using the `key-data` hash.",
      "oneOf": [
        {
          "type": [
            "object",
            "string"
          ],
          "required": [
            "key-data"
          ],
          "properties": {
            "key-data": {
              "description": "The contents of the private key.",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/_plugin"
                }
              ]
            }
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "proxyjump": {
      "description": "A jump host to proxy connections through, and an optional user to connect with.",
      "oneOf": [
        {
          "type": "string",
          "format": "uri"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "read-timeout": {
      "description": "How long to wait in seconds when making requests to the Orchestrator.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 1
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "realm": {
      "description": "The Kerberos realm (Active Directory domain) to authenticate against.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "remote": {
      "type": "string",
      "description": "The LXD remote host to use."
    },
    "run-as": {
      "description": "The user to run commands as after login. The run-as user must be different than the login user.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "run-as-command": {
      "description": "The command to elevate permissions. Bolt appends the user and command strings to the configured `run-as-command` before running it on the target. This command must not require  aninteractive password prompt, and the `sudo-password` option is ignored when `run-as-command` is specified. The `run-as-command` must be specified as an array.",
      "oneOf": [
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "run-on": {
      "description": "The proxy target that the task executes on.",
      "oneOf": [
        {
          "type": "string",
          "format": "uri"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "script-dir": {
      "description": "The subdirectory of the tmpdir to use in place of a randomized subdirectory for uploading and executing temporary files on the target. It's expected that this directory already exists as a subdir of tmpdir, which is either configured or defaults to `/tmp`.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "service-url": {
      "description": "The URL of the host used for API requests.",
      "oneOf": [
        {
          "type": "string",
          "format": "uri"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "shell-command": {
      "description": "A shell command to wrap any Docker exec commands in, such as `bash -lc`.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "smb-port": {
      "description": "The port to use when connecting to the target when file-protocol is set to 'smb'.",
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "ssh-command": {
      "description": "The command and options to use when SSHing. This option is used when you need support for features or algorithms that are not supported by the net-ssh Ruby library. **This option is experimental.** You can read more about this  option in [Native SSH transport](experimental_features.md#native-ssh-transport).",
      "oneOf": [
        {
          "type": [
            "array",
            "string"
          ],
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/_plugin"
              }
            ]
          }
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "ssl": {
      "description": "Whether to use secure https connections for WinRM.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "ssl-verify": {
      "description": "Whether to verify that the target's certificate matches the cacert.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "sudo-executable": {
      "description": "The executable to use when escalating to the configured `run-as` user. This is useful when you want to escalate using the configured `sudo-password`, since `run-as-command` does not use `sudo-password` or support prompting. The command executed on the target is `<sudo-executable> -S -u <user> -p custom_bolt_prompt <command>`. **This option is experimental.**",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "sudo-password": {
      "description": "The password to use when changing users via `run-as`.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "task-environment": {
      "description": "The environment the orchestrator loads task code from.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "tmpdir": {
      "description": "The directory to upload and execute temporary files on the target.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "token-file": {
      "description": "The path to the token file.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "tty": {
      "description": "Whether to enable tty on exec commands.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    },
    "user": {
      "description": "The user name to login as.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/_plugin"
        }
      ]
    }
  }
}