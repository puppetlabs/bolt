# See https://www.appveyor.com/docs/lang/ruby/
version: 0.1.0.{build}-{branch}
cache:
  - .bundle

matrix:
  fast_finish: true

environment:
  BOLT_WINRM_USER: roddypiper
  BOLT_WINRM_HOST: localhost
  BOLT_WINRM_PORT: 5985
  BOLT_WINRM_SSL_PORT: 5986
  matrix:
    - RUBY_VERSION: 23
    - RUBY_VERSION: 24

install:
  - set PATH=C:\Ruby%RUBY_VERSION%\bin;%PATH%
  - git submodule update --init --recursive
  - bundle config --local path .bundle
  - bundle install --jobs 3 --retry 3

build: off

before_test:
  - ps: |
      ruby -v
      gem -v
      bundle -v
      type Gemfile.lock
      $CACertFile = Join-Path -Path $ENV:AppData -ChildPath 'RubyCACert.pem'

      If (-Not (Test-Path -Path $CACertFile)) {
        "Downloading CA Cert bundle.."
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-WebRequest -Uri 'https://curl.haxx.se/ca/cacert.pem' -UseBasicParsing -OutFile $CACertFile | Out-Null
          }

          "Setting CA Certificate store set to $CACertFile.."
      $ENV:SSL_CERT_FILE = $CACertFile
      [System.Environment]::SetEnvironmentVariable('SSL_CERT_FILE',$CACertFile, [System.EnvironmentVariableTarget]::Machine)
      bundle exec r10k puppetfile install
      Add-Type -AssemblyName System.Web
      $ENV:BOLT_WINRM_PASSWORD = "&aA4" + [System.Web.Security.Membership]::GeneratePassword(10, 3)
      ($user = New-LocalUser -Name $ENV:BOLT_WINRM_USER -Password (ConvertTo-SecureString -String $ENV:BOLT_WINRM_PASSWORD -Force -AsPlainText)) | Format-List
      Add-LocalGroupMember -Group 'Remote Management Users' -Member $user
      # configure WinRM to use resources/cert.pfx for SSL
      ($cert = Import-PfxCertificate -FilePath resources/cert.pfx -CertStoreLocation cert:\\LocalMachine\\My -Password (ConvertTo-SecureString -String bolt -Force -AsPlainText)) | Format-List
      New-WSManInstance -ResourceURI winrm/config/Listener -SelectorSet @{Address='*';Transport='HTTPS'} -ValueSet @{Hostname='localhost';CertificateThumbprint=$cert.Thumbprint} | Format-List

test_script:
  - bundle exec rake appveyor
  - cd bolt-modules/boltlib
  - bundle exec rake spec
  - cd ../..
  - ps: |
      $test_fail = 0
      $mods = ("canary", "aggregate", "puppetdb_fact")
      Get-ChildItem modules -Directory -Include $mods | foreach {
        cd $_.FullName;
        $test_output = bundle exec rake spec
        $r = $LASTEXITCODE
        Write-Output $test_output
        if($r) {
          $test_fail = $r
        }
      }
      if($test_fail) { throw "module tests failed" }
