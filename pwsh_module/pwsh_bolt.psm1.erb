<%# empty line %>
# AUTOGENERATED BY BOLT
# DO NOT MODIFY
$script:mapping = @{
<% @mapped_options.each do |k,v| -%>
"<%= k -%>" = "<%= v -%>"
<% end -%>
}

<% @commands.each do |pwsh_command| %>
<#
.SYNOPSIS
  <%= pwsh_command[:syntax] %>
.DESCRIPTION
  <%= pwsh_command[:description] %>
<% pwsh_command[:options].each do |option| -%>
.PARAMETER <%= option[:name] %>
  <%= option[:help_msg] %>
<% end -%>
<% if pwsh_command[:verb] == 'Get' -%>
.PARAMETER Version
  Get the version of the bolt installation
<% end -%>
.LINK
  https://puppet.com/products/bolt
.LINK
  https://puppet.com/docs/bolt/latest/bolt_command_reference.html
#>
function <%= pwsh_command[:cmdlet] %>
{
  [CmdletBinding()]
  param (<%
function_params = []
pwsh_command[:options].each do |option|
  parameter_statement = []
  if option[:mandatory]
    parameter_statement << "Mandatory=$#{option[:mandatory]}"
  end
  if option[:position]
    parameter_statement << "Position=#{option[:position]}"
  end
  if option[:value_from_remaining_arguments]
    parameter_statement << "ValueFromRemainingArguments=$#{option[:value_from_remaining_arguments]}"
  end
  if option[:parameter_set]
    parameter_statement << "ParameterSetName='#{option[:parameter_set]}'"
  end

  output = []
  output << "    [Parameter(" + parameter_statement.join(", ") + ")]"
  if option[:validate_not_null_or_empty]
    output << "    [ValidateNotNullOrEmpty()]"
  end
  if option[:validate_set]
    output << "    [ValidateSet(#{option[:validate_set].map(&:inspect).join(', ')})]"
  end
  if option[:validate_pattern]
    output << "    [ValidatePattern('#{option[:validate_pattern]}')]"
  end
  if option[:ruby_short]
    output << "    [Alias('#{option[:ruby_short].gsub("-","")}')]"
  end
  if option[:type]
    output << "    [#{option[:type]}]"
  end
  output << "    $#{option[:name]}"

  function_params << output.join("\n")
end

if pwsh_command[:verb] == 'Get'
  function_params << "    [Parameter()]\n    [switch]$Version"
end
%>
<%= function_params.join(",\n\n") %>
  )
<% if pwsh_command[:verb] == 'Get' %>
  if($version){
    return Get-BoltVersion
  }
<% end -%>

  $executionParams = @('<%= pwsh_command[:ruby_command] -%>'<% if pwsh_command[:ruby_action] -%>, '<%= pwsh_command[:ruby_action] -%>'<% end -%>)

  $executionParams = $executionParams + (Get-BoltCommandline -parameterHash $PSBoundParameters -mapping $mapping)

  $result = Invoke-BoltCommandline $executionParams

  Write-Output $result

}
<% end %>

<% unless ENV['BOLT_DISABLE_PWSH_WARNING'] -%>
function Write-DeprecationWarning
{
  $FirstRunFile = "$HOME/.puppetlabs/etc/bolt/.first_runs_free"

  if (-not(Test-Path -Path $FirstRunFile)) {
    New-Item -ItemType File -Path $FirstRunFile -Force -ErrorAction SilentlyContinue

    $Warning =  "The PuppetBolt PowerShell module will no longer ship with Bolt packages in a future release. ";
    $Warning += "Install the PuppetBolt PowerShell module from PowerShell Gallery instead using 'Import-Module PuppetBolt'."
    Write-Warning $Warning
  }
}

Write-DeprecationWarning
<% end -%>
